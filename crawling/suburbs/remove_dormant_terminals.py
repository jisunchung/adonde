# -*- coding: utf-8 -*-
"""remove_dormant_terminals.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vrCK_-RjjJuKfwXCqVBml04FeAGuK58I
"""

pip install xmltodict

# importing necessary libraries

from bs4 import BeautifulSoup
import requests, xmltodict
import urllib
from urllib.request import urlopen
import pandas as pd

# API key settings

base_url = "http://openapi.tago.go.kr/openapi/service/SuburbsBusInfoService/getTrminlAcctoSuberbsBusInfo?ServiceKey={}&terminalId={}&depPlandTime=20210706&numOfRows=1000"
jw_key = "YIG48RZ4OVNbB15tDMQv6%2FS4eDc38APYyyBkaUCB%2BnrBCbtm7l1hpnNDmVQ1p4RXGoQC7GYdXhpYgoPn%2FIzZww%3D%3D"
js_key = "IEjqLPhgSeNKrTAfRoVI%2B7UDXveTEiYz4iX7fOeZI52ICTqbEchG%2FDlEGrbhklOVF%2B%2FRHW4%2FdTkmXaXNXgwBVA%3D%3D"

keys = [jw_key, js_key]

keys.append("DrKafXvQUZuWUWrlCqV5LuOc8ydG5e4kqY%2FOYOrMnqC31uMjtVsNiUGrAtFeOuU5DTOiFyk5PCHHVYL6htP0Zg%3D%3D")
keys.append("FRwvA0%2FjetViPb6gJlRt6sy6HyUqCAhpK2UIgCRHEGSDxP3J5GZguVDAzNMGSpsySXxQAMZjOGhW0Lnn3BCvRA%3D%3D")
keys.append("1vKYx8mJcSORS7i9d%2BNllRatkNxcexJzbugUMi5R%2B3KvckxMhNYFtMFW3r%2FVm1xrXBUzfiQ70aCBmvDsudIaXw%3D%3D")
keys.append("5bzXEAG80KKE9Y6fWqpUOcwtMlpOUWLxlPUpLRzpFtYiA2S6Yd8iz30WG9MOk1T4juIDeyNqK%2FJvoCoUB16QYw%3D%3D")
keys.append("L7OZ4LHbSgTQWjD%2FP7r8Box8MCEcEN1KiUDnbu910KW7UlZsK1qOIOA5rhju%2BZjtZDRd11nr%2FTbshzaqJ3DWmQ%3D%3D")
keys.append("jL7UfxKH2%2Fqfx%2FJaq1FoZKSzhQolgN5qGIPHlD7kW86C8GwgAX%2FcWbcNep3Oi330z%2BzUsf1rePlkbrEYsquGYQ%3D%3D")
keys.append("71vq11IN2TI157FptiqGmLvETZ9pqv76NE0y7AqQHQCzCXNUDFdX%2BnqxQmDYZZnWo0mcf2NHmmnOY5A8C5aq8A%3D%3D")
keys.append("QkI8oj7L%2BgZhSumM2IY7ByN6VPYnVesvlcjiFQaiO47V7XEKfH%2BRbXTf58R%2BZHCSQzMlQtRCK9ymu9DxRM%2BITg%3D%3D")
keys.append("7%2F5ebTmaTwPxDP9HBX6tuP1EEV0VGEx%2BJ8mt7AbGRIWdGMOFssioAXBXChTMHgfldW%2BDjuW%2FjOywvs3vsr%2Bsuw%3D%3D")
# keys.append("U9SDoQbtIvXr89CBmMLWMCxx5LaX3C5di51KBBaw1MQscVqzyoYw4sjy06GG2UlCODaNZ%2F9pWjgHSAzEH%2BpRrQ%3D%3D")
keys.append("KBD%2BiKisQv%2F5Uz1Ef%2BK0kwAeSzDyoQ9FlYXNzGkKFJ9YR6Zv7PyLPZAoxo%2FNK5e21kS59a4%2BbIg3u46MTxDD3Q%3D%3D")

# keys.append("")

# setting up suburbs bus terminal data
github_url = "https://raw.githubusercontent.com/forrestpark/adonde.kr/main/data/suburbs/suburbs_combined.csv"
suburbs = pd.read_csv(github_url)

# function that adds the service key and the bus terminal ID to the URL we'll be requesting
# returns a fully functioning API request URL
def add_terminal_ids(service_key, id):
  return base_url.format(service_key, id)

# function that sends the API URL request
# uses the public OpenAPI, provided by Republic of Korea's Ministry of Land, Infrastructure, and Transport
# details about the API can be found here:
# https://www.data.go.kr/tcs/dss/selectApiDataDetailView.do?publicDataPk=15000590
def send_requests(key_idx, id, req_count):
  url = add_terminal_ids(keys[key_idx], id)
  req_count += 1
  return requests.get(url).content, req_count

# finds whether the suburban bus terminal to which the given bus terminal ID corresponds
# has at least one actively operating bus route
# calls most of the helper methods mentioned above
def remove_dormant_terminals(key_idx=0, start=0, end=len(suburbs),req_count = 0):

  for idx, item in suburbs.iterrows():
    id = item['id']
    print(item['name'], item['id'])
    content, req_count = send_requests(key_idx, id, req_count)

    dict = xmltodict.parse(content)
    while dict['response']['header']['resultCode'] != '00':
      key_idx += 1
      print("moving key index to ", key_idx)
      if key_idx == len(keys):
        content, req_count = send_requests(key_idx, depTerminal, arrTerminal, req_count)
        dict = xmltodict.parse(content)
        print(dict)
      # dict = dict['response']['body']['items']

    # print(dict['response']['body'])
    totalCount = dict['response']['body']['totalCount']

    # print(totalCount)

    if int(totalCount) > 0:
      active_terminal_list.append(item)
      print(totalCount)

# calls the main API-crawling function
# you may update key_idx and start values
# parameters
# key_idx: sets which API key to start with
# start: index of train_route_exists to start the search from

active_terminal_list = []

remove_dormant_terminals(key_idx=0, start=0)

len(active_terminal_list)

df = pd.DataFrame(active_terminal_list)
# display(df)
df.to_csv("suburbs_active.csv", index=False)