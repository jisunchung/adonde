# -*- coding: utf-8 -*-
"""bus_terminal_naver_crawling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x_llRu8rmygTI-lhs6bPNY7jYk4r-zuJ
"""

pip install xmltodict
pip install bs4

pip install selenium

from bs4 import BeautifulSoup
import requests
import urllib
from urllib.request import urlopen
import pandas as pd

express_id_name_github_url = "https://raw.githubusercontent.com/forrestpark/adonde.kr/main/data/express_id_name.csv"
express_id_name = pd.read_csv(express_id_name_github_url)

test_terminals = []
for index, terminal in express_id_name[1:].iterrows():
  test_terminals.append([terminal[0], terminal[1]])

search_base_url = "https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=1&ie=utf8&query="
# map_base_url = "https://map.naver.com/v5/search/" + urllib.parse.quote("인천공항T1버스터미널")

def add_query2baseurl(query):
  query = query + " 버스터미널"
  return "https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=1&ie=utf8&query=" + urllib.parse.quote(query)

id_nm_adrs = {}

count = 0

for id, name in test_terminals:
  print(name)
  url = add_query2baseurl(name)
  res = urllib.request.urlopen(url).read()
  soup = BeautifulSoup(res, 'html.parser')
  first_entry = soup.find("div", id="loc-main-section-root")
  if not first_entry:
    continue
  names = first_entry.find_all("span", "_3Apve")
  if not names:
    continue
  types = first_entry.find_all("span", "_3B6hV")
  if not types:
    continue
  addresses = first_entry.find_all("span", "_3hCbH")
  if not addresses:
    continue
  
  count += 1

  nm_adrs = [name]

  for index, (name, type, address) in enumerate(zip(names, types, addresses)):
    
    # print(names[i].text)
    if name.text.find("터미널") != -1 and type.text.find("버스터미널") != -1:
      parsed_address = address.text.split(" ")
      nm_adrs.append(parsed_address[0])
      nm_adrs.append(parsed_address[1])
      break

  if len(nm_adrs) == 3:
    id_nm_adrs[id] = nm_adrs

df = pd.DataFrame(id_nm_adrs)
df.to_csv('expressbus_id_nm_adrs.csv')