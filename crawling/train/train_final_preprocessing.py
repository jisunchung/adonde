# -*- coding: utf-8 -*-
"""train_final_preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aIlCtPui0rXYu8-RBPgrhT4qvWicUfqp
"""

# importing pandas
import pandas as pd

# fetching train data to preprocess from github
# the github data is also produced by me
github_url = "https://raw.githubusercontent.com/forrestpark/adonde.kr/main/data/train/train_route_exists_final.csv"
train = pd.read_csv(github_url)
train

# making a list of cities with train stations, without duplicates
trainCities = list(set(train['depCity']))

# creating a dictionary whose key is the city and value is a list of cities
# that can be reached by train from the city of key
destinations_per_city = {eval(key):[] for key in trainCities}

destinations_per_city

# if routes is 1, meaning if there exists a direct route between two cities
# add the arrival city to the departure city's corresponding value list
for idx, item in train.iterrows():
  if item['routes'] == 1:
    destinations_per_city[eval(item['depCity'])].append(item['arrCity'])

# checking the length of the destinations dictionary
len(destinations_per_city)

# initializing an empty key list
key_list = []

# iterate through all keys and values of the dictionary
for key, value in zip(destinations_per_city.keys(), destinations_per_city.values()):
  # if the value list is empty,
  # we drop the entire key-value pair
  if not value:
    key_list.append(key)

for key in key_list:
  destinations_per_city.pop(key)

# formatting the destination dictionary in a way that can be easily processed
# in our main Node.js app in JavaScript

sido_list, sgg_list, dest_list = [], [], []
for key, values in zip(destinations_per_city.keys(), destinations_per_city.values()):
  (sido, sgg) = key
  sido_list.append(sido)
  sgg_list.append(sgg)
  destinations = []
  for value in values:
    (dest_sido, dest_sgg) = eval(value)
    destinations.append(dest_sido)
    destinations.append(dest_sgg)

  dest_list.append(destinations)

# creating dataframe based on the data preprocessed above
data = {'sido':sido_list, 'sgg':sgg_list, 'destinations':dest_list}
df = pd.DataFrame(data)
display(df)

# exporting as csv file
df.to_csv("train_city_destinations3.csv", index=False)