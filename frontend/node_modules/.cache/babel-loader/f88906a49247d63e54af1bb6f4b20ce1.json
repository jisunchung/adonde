{"remainingRequest":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/babel-loader/lib/index.js!/Users/chungjisun/Desktop/adonde/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chungjisun/Desktop/adonde/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chungjisun/Desktop/adonde/frontend/src/components/ShowMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chungjisun/Desktop/adonde/frontend/src/components/ShowMap.vue","mtime":1631933568841},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ShowMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    \n  <div class=\"map\">\n        <div id=\"map\" style=\"width:100;height:650px;\"></div>   \n  </div>\n\n</template>\n<script>\nimport { mapState, mapMutations } from 'vuex'\nexport default {\n    data(){\n        return{\n            currentLat:null,\n            currentLng:null,\n            currentLocation: null,\n            markers:[],\n            //마커 이미지의 이미지 주소입니다\n            imageSrc : \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\" \n        }\n    },\n    mounted() { \n        // console.log(\"window kakao: \", window.kakao)\n        // console.log(\"window kakao maps: \", window.kakao.maps)\n        window.kakao && window.kakao.maps ? this.initMap() : this.addScript(); \n        // this.initMap()\n    }, \n    computed:{\n        ...mapState([\n            'currentAdd',\n            'positions',\n            'clickItemNum',\n            'searchResults',\n            'map',\n            'isSetMarker',\n            'isSubmitValueChange'\n            \n            \n        ])\n    },\n    methods : { \n        ...mapMutations([\n            'updateCurrentAdd',\n            'updateClickItemNum',\n            'updateCheckCurrentDisabled',\n            'updateMap',\n            'updateIsSetMarker',\n            \n        ]),\n        initMap() { \n            console.log(\"initmap\")\n            document.cookie = \"crossCookie=bar; SameSite=None; Secure\";\n            console.log('initmap')\n            var container = document.getElementById('map'); \n            var options = { \n                center: new kakao.maps.LatLng(33.450701, 126.570667), \n                level: 3 \n            }; \n            //지도를 생성해준다\n            var map = new kakao.maps.Map(container, options); \n            this.updateMap(map)\n\n\n\n            // 지도를 재설정할 범위정보를 가지고 있을 LatLngBounds 객체를 생성합니다\n            // var bounds = new kakao.maps.LatLngBounds();   \n            // this.updateBounds(bounds)\n\n            //현위치 불러오기\n            if (navigator.geolocation) {\n            var vm = this;\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function(position) {\n                \n                var lat = position.coords.latitude, // 위도\n                    lng = position.coords.longitude // 경도\n\n                // this.currentLat = lat\n                // this.currentLng = lng\n                \n                var locPosition = new kakao.maps.LatLng(lat, lng) // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                vm.currentLocation = locPosition \n                //현재주소를 가져옴\n                vm.getAddr(lat,lng).then(function(res) {                  \n                    vm.updateCurrentAdd(res)\n                    vm.updateCheckCurrentDisabled(false)\n\n                    var message = '<span style=\"width:max-content;\">현재위치</span>'+'<div class=\"nowCurrent\" style=\"width:max-content;\">'+ res + '</div>' // 인포윈도우에 표시될 내용입니다\n\n                    // 마커와 인포윈도우를 표시합니다\n                    vm.displayMarker(locPosition, message, map)\n                })\n                \n              });\n    \n            } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n                  \n                    var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    \n                        message = 'geolocation을 사용할수 없어요..'\n                    vm.updateCurrentAdd(null)\n                    vm.displayMarker(locPosition, message, map)\n            }\n\n\n            //mapcontrol올리기\n            this.addMapControl(this.map)\n\n            // console.log(\"clicknum: \",this.clickItemNum)\n            \n            //여러가지 마커들 표시하기\n            //this.callSetMarkers(map, bounds)\n            //this.setMarkers(this.map, bounds)\n\n            // LatLngBounds 객체에 추가된 좌표들을 기준으로 지도의 범위를 재설정합니다\n            // 이때 지도의 중심좌표와 레벨이 변경될 수 있습니다\n            //map.setBounds(this.bounds);\n    \n        }, \n        addScript() { \n            console.log(\"addscript\")\n            const script = document.createElement('script'); \n        /* global kakao */ \n        script.onload = () => kakao.maps.load(this.initMap); \n        //script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=75fadd5808d741eea9e1e3900de5a7a3'; \n        document.head.appendChild(script); \n        },\n        addMapControl(map){\n             // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n            var mapTypeControl = new kakao.maps.MapTypeControl();\n\n            // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n            // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n            map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n            // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n            var zoomControl = new kakao.maps.ZoomControl();\n            map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n        },\n        // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \n        makeOverListener(map, marker, infowindow) {\n            return function() {\n                infowindow.open(map, marker);\n            };\n        },\n        // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \n        makeOutListener(infowindow) {\n            return function() {\n                infowindow.close();\n            };\n        },\n        Zoom(map){\n            if(this.clickItemNum != null){\n                console.log('zooooom')\n                var lat1 = this.searchResults[this.clickItemNum].latitude, // 위도\n                    lng1 = this.searchResults[this.clickItemNum].longitude// 경도\n\n                console.log(lat1, lng1)\n                //위도, 경도 정보를 가지고 위치를 지정해줌\n                var latlng1= new kakao.maps.LatLng(lat1, lng1)\n\n                map.setCenter(latlng1)\n\n                this.updateClickItemNum(null)\n        \n            }\n        },\n        getAddr(lat, lng) {   \n            let geocoder = new kakao.maps.services.Geocoder()\n            let coord = new kakao.maps.LatLng(lat, lng)\n\n            let callBackPromise = new Promise((resolve, reject) => {\n                geocoder.coord2Address(coord.getLng(), coord.getLat(), (result, status) => {\n                    if (status === kakao.maps.services.Status.OK) {\n                        console.log(result);\n                        //alert(Object.values(result)[0].address.address_name);\n                        resolve(Object.values(result)[0].address.address_name);  \n                        \n                    } else {\n                        reject(new Error(\"Request failed.\"));\n                    }  \n                });\n            });\n\n            return callBackPromise\n        },\n        displayMarker(locPosition, message, map) {\n\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({  \n                map: map, \n                position: locPosition\n            }); \n            \n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content : iwContent,\n                removable : iwRemoveable,\n                zindex:1\n            });\n            infowindow.setContent(message)\n            // 인포윈도우를 마커위에 표시합니다 \n            infowindow.open(map, marker)\n            \n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n            \n            // LatLngBounds 객체에 좌표를 추가합니다\n            //bounds.extend(locPosition);\n        },\n        setMarkers(map){\n            this.removeMarker()\n            var bounds = new kakao.maps.LatLngBounds();   \n            bounds.extend(this.currentLocation)\n            // this.bounds.extend(null)\n            // this.bounds.extend(this.currentLocation)\n            //여러가지 마커 설정하기   \n            for (var i = 0; i < this.searchResults.length; i ++) {\n                // 마커 이미지의 이미지 크기 입니다\n                var imageSize = new kakao.maps.Size(24, 35); \n                \n                // 마커 이미지를 생성합니다    \n                var markerImage = new kakao.maps.MarkerImage(this.imageSrc, imageSize); \n                \n                var lat = this.searchResults[i].latitude, // 위도\n                    lng = this.searchResults[i].longitude// 경도\n\n                //위도, 경도 정보를 가지고 위치를 지정해줌\n                var latlng= new kakao.maps.LatLng(lat, lng)\n                // 마커를 생성합니다\n                var marker = new kakao.maps.Marker({\n                    map: map, // 마커를 표시할 지도\n                    position: latlng, // 마커를 표시할 위치\n                    title : this.searchResults[i].sido_sgg, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n                    image : markerImage // 마커 이미지 \n                });\n                this.markers.push(marker)\n\n                marker.setMap(map);\n\n                // 마커에 표시할 인포윈도우를 생성합니다 \n                var infowindow = new kakao.maps.InfoWindow({\n                    content: this.searchResults[i].sido_sgg// 인포윈도우에 표시할 내용\n                });\n\n                // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n                // 이벤트 리스너로는 클로저를 만들어 등록합니다 \n                // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n                kakao.maps.event.addListener(marker, 'mouseover', this.makeOverListener(map, marker, infowindow));\n                kakao.maps.event.addListener(marker, 'mouseout', this.makeOutListener(infowindow));\n\n                // LatLngBounds 객체에 좌표를 추가합니다\n                bounds.extend(latlng);\n            }\n            this.updateIsSetMarker(false)\n            console.log(\"markers: \",this.markers)\n            console.log(\"bounds: \", bounds)\n            map.setBounds(bounds);\n            \n        },\n        removeMarker() {\n            for ( var i = 0; i < this.markers.length; i++ ) {\n                this.markers[i].setMap(null);\n            }   \n            this.markers = [];\n        },\n        async callSetMarkers(map, bounds){\n            await this.setMarkers(map, bounds)\n        }\n                   \n    },\n    watch:{\n        clickItemNum: function(newval, oldval) {\n            console.log(\"newval\",newval +\",\" +oldval)\n        },\n        // isSubmitValueChange: function(newval){\n        //     if(!newval){\n        //         console.log(\"지도에서 감지함\")\n        //     }\n        // },\n        isSetMarker: function(newval){\n            if(newval){\n                this.setMarkers(this.map, this.bounds)\n                console.log(\"isSetmarker : \", newval )\n            }\n        }\n    }\n    \n}\n</script>\n"],"sourceRoot":"src/components"}]}