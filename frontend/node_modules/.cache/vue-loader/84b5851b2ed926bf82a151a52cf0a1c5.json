{"remainingRequest":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chungjisun/Desktop/adonde/frontend/src/components/ShowMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chungjisun/Desktop/adonde/frontend/src/components/ShowMap.vue","mtime":1631934445704},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chungjisun/Desktop/adonde/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ShowMap.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ShowMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    \n  <div class=\"map\">\n        <div id=\"map\" style=\"width:100;height:650px;\"></div>   \n  </div>\n\n</template>\n<script>\nimport { mapState, mapMutations } from 'vuex'\nexport default {\n    data(){\n        return{\n            currentLat:null,\n            currentLng:null,\n            currentLocation: null,\n            markers:[],\n            //마커 이미지의 이미지 주소입니다\n            imageSrc : \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\" \n        }\n    },\n    mounted() { \n        // console.log(\"window kakao: \", window.kakao)\n        // console.log(\"window kakao maps: \", window.kakao.maps)\n        window.kakao && window.kakao.maps ? this.initMap() : this.addScript(); \n        // this.initMap()\n    }, \n    computed:{\n        ...mapState([\n            'currentAdd',\n            'positions',\n            'clickItemNum',\n            'searchResults',\n            'map',\n            'isSetMarker',\n            'isSubmitValueChange'\n            \n            \n        ])\n    },\n    methods : { \n        ...mapMutations([\n            'updateCurrentAdd',\n            'updateClickItemNum',\n            'updateCheckCurrentDisabled',\n            'updateMap',\n            'updateIsSetMarker',\n            \n        ]),\n        initMap() { \n            console.log(\"initmap\")\n            document.cookie = \"crossCookie=bar; SameSite=None; Secure\";\n            console.log('initmap')\n            var container = document.getElementById('map'); \n            var options = { \n                center: new kakao.maps.LatLng(33.450701, 126.570667), \n                level: 3 \n            }; \n            //지도를 생성해준다\n            var map = new kakao.maps.Map(container, options); \n            this.updateMap(map)\n\n\n\n            // 지도를 재설정할 범위정보를 가지고 있을 LatLngBounds 객체를 생성합니다\n            // var bounds = new kakao.maps.LatLngBounds();   \n            // this.updateBounds(bounds)\n\n            //현위치 불러오기\n            if (navigator.geolocation) {\n            var vm = this;\n            // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n            navigator.geolocation.getCurrentPosition(function(position) {\n                \n                var lat = position.coords.latitude, // 위도\n                    lng = position.coords.longitude // 경도\n\n                // this.currentLat = lat\n                // this.currentLng = lng\n                \n                var locPosition = new kakao.maps.LatLng(lat, lng) // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                vm.currentLocation = locPosition \n                //현재주소를 가져옴\n                vm.getAddr(lat,lng).then(function(res) {                  \n                    vm.updateCurrentAdd(res)\n                    vm.updateCheckCurrentDisabled(false)\n\n                    var message = '<span style=\"width:max-content;\">현재위치</span>'+'<div class=\"nowCurrent\" style=\"width:max-content;\">'+ res + '</div>' // 인포윈도우에 표시될 내용입니다\n\n                    // 마커와 인포윈도우를 표시합니다\n                    vm.displayMarker(locPosition, message, map)\n                })\n                \n              });\n    \n            } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n                  \n                    var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    \n                        message = 'geolocation을 사용할수 없어요..'\n                    vm.updateCurrentAdd(null)\n                    vm.displayMarker(locPosition, message, map)\n            }\n\n\n            //mapcontrol올리기\n            this.addMapControl(this.map)\n\n            // console.log(\"clicknum: \",this.clickItemNum)\n            \n            //여러가지 마커들 표시하기\n            //this.callSetMarkers(map, bounds)\n            //this.setMarkers(this.map, bounds)\n\n            // LatLngBounds 객체에 추가된 좌표들을 기준으로 지도의 범위를 재설정합니다\n            // 이때 지도의 중심좌표와 레벨이 변경될 수 있습니다\n            //map.setBounds(this.bounds);\n    \n        }, \n        addScript() { \n            console.log(\"addscript\")\n            const script = document.createElement('script'); \n        /* global kakao */ \n        script.onload = () => kakao.maps.load(this.initMap); \n        //script.src = 'https://dapi.kakao.com/v2/maps/sdk.js?appkey=75fadd5808d741eea9e1e3900de5a7a3'; \n        document.head.appendChild(script); \n        },\n        addMapControl(map){\n             // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\n            var mapTypeControl = new kakao.maps.MapTypeControl();\n\n            // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\n            // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\n            map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n\n            // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n            var zoomControl = new kakao.maps.ZoomControl();\n            map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n        },\n        // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \n        makeOverListener(map, marker, infowindow) {\n            return function() {\n                infowindow.open(map, marker);\n            };\n        },\n        // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \n        makeOutListener(infowindow) {\n            return function() {\n                infowindow.close();\n            };\n        },\n        Zoom(map){\n            if(this.clickItemNum != null){\n                console.log('zooooom')\n                var lat1 = this.searchResults[this.clickItemNum].latitude, // 위도\n                    lng1 = this.searchResults[this.clickItemNum].longitude// 경도\n\n                console.log(lat1, lng1)\n                //위도, 경도 정보를 가지고 위치를 지정해줌\n                var latlng1= new kakao.maps.LatLng(lat1, lng1)\n\n                map.setCenter(latlng1)\n\n                this.updateClickItemNum(null)\n        \n            }\n        },\n        getAddr(lat, lng) {   \n            let geocoder = new kakao.maps.services.Geocoder()\n            let coord = new kakao.maps.LatLng(lat, lng)\n\n            let callBackPromise = new Promise((resolve, reject) => {\n                geocoder.coord2Address(coord.getLng(), coord.getLat(), (result, status) => {\n                    if (status === kakao.maps.services.Status.OK) {\n                        console.log(result);\n                        //alert(Object.values(result)[0].address.address_name);\n                        resolve(Object.values(result)[0].address.address_name);  \n                        \n                    } else {\n                        reject(new Error(\"Request failed.\"));\n                    }  \n                });\n            });\n\n            return callBackPromise\n        },\n        displayMarker(locPosition, message, map) {\n\n            // 마커를 생성합니다\n            var marker = new kakao.maps.Marker({  \n                map: map, \n                position: locPosition\n            }); \n            \n            var iwContent = message, // 인포윈도우에 표시할 내용\n                iwRemoveable = true\n\n            // 인포윈도우를 생성합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content : iwContent,\n                removable : iwRemoveable,\n                zindex:1\n            });\n            infowindow.setContent(message)\n            // 인포윈도우를 마커위에 표시합니다 \n            infowindow.open(map, marker)\n            \n            // 지도 중심좌표를 접속위치로 변경합니다\n            map.setCenter(locPosition)\n            \n            // LatLngBounds 객체에 좌표를 추가합니다\n            //bounds.extend(locPosition);\n        },\n        setMarkers(map){\n            this.removeMarker()\n            var bounds = new kakao.maps.LatLngBounds();   \n            bounds.extend(this.currentLocation)\n            // this.bounds.extend(null)\n            // this.bounds.extend(this.currentLocation)\n            //여러가지 마커 설정하기   \n            for (var i = 0; i < this.searchResults.length; i ++) {\n                // 마커 이미지의 이미지 크기 입니다\n                var imageSize = new kakao.maps.Size(24, 35); \n                \n                // 마커 이미지를 생성합니다    \n                var markerImage = new kakao.maps.MarkerImage(this.imageSrc, imageSize); \n                \n                var lat = this.searchResults[i].latitude, // 위도\n                    lng = this.searchResults[i].longitude// 경도\n\n                //위도, 경도 정보를 가지고 위치를 지정해줌\n                var latlng= new kakao.maps.LatLng(lat, lng)\n                // 마커를 생성합니다\n                var marker = new kakao.maps.Marker({\n                    map: map, // 마커를 표시할 지도\n                    position: latlng, // 마커를 표시할 위치\n                    title : this.searchResults[i].sido_sgg, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n                    image : markerImage // 마커 이미지 \n                });\n                this.markers.push(marker)\n\n                marker.setMap(map);\n\n                // 마커에 표시할 인포윈도우를 생성합니다 \n                var infowindow = new kakao.maps.InfoWindow({\n                    content: this.searchResults[i].sido_sgg// 인포윈도우에 표시할 내용\n                });\n\n                // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\n                // 이벤트 리스너로는 클로저를 만들어 등록합니다 \n                // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\n                kakao.maps.event.addListener(marker, 'mouseover', this.makeOverListener(map, marker, infowindow));\n                kakao.maps.event.addListener(marker, 'mouseout', this.makeOutListener(infowindow));\n\n                // LatLngBounds 객체에 좌표를 추가합니다\n                bounds.extend(latlng);\n            }\n            this.updateIsSetMarker(false)\n            console.log(\"markers: \",this.markers)\n            console.log(\"bounds: \", bounds)\n            map.setBounds(bounds);\n            \n        },\n        removeMarker() {\n            for ( var i = 0; i < this.markers.length; i++ ) {\n                this.markers[i].setMap(null);\n            }   \n            this.markers = [];\n        },\n        async callSetMarkers(map, bounds){\n            await this.setMarkers(map, bounds)\n        }\n                   \n    },\n    watch:{\n        clickItemNum: function(newval, oldval) {\n            console.log(\"newval\",newval +\",\" +oldval)\n        },\n        // isSubmitValueChange: function(newval){\n        //     if(!newval){\n        //         console.log(\"지도에서 감지함\")\n        //     }\n        // },\n        isSetMarker: function(newval){\n            if(newval){\n                this.setMarkers(this.map, this.bounds)\n                console.log(\"isSetmarker : \", newval )\n            }\n        }\n    }\n    \n}\n</script>\n"]}]}